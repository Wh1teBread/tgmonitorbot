import array
from sys import exception
import time
import threading
import requests
import json

import telebot
from telebot import types
bot = telebot.TeleBot('5796886633:AAHGvSj3jZzcReDSKOkntU19lRPhaPoIZAo')

@bot.message_handler(commands=['start'])
def start(message):
    mode = ""

    chatToDatabase(message.chat.id)

    
    bot.send_message(message.chat.id, text="üëÅÔ∏è –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü!\n\n" 
                     +"üîΩ –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥.\n\n" 
                     +"‚ÄºÔ∏è –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–æ–≥—É—Ç –∑–∞—Ç–æ—Ä–º–∞–∂–∏–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π.\n\n" 
                     +"‚ö†Ô∏è –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.", reply_markup=mainMenuMarkup(message.chat.id))
    
def chatToDatabase(id):
    json_out = json.load(open('requestsdata.json', encoding='utf-8'))

    for i in json_out:
        if i['chatid'] == id:
            #bot.send_message(id, text="‚ö†Ô∏è –í—ã —É–∂–µ –≤ –±–∞–∑–µ")
            return
        
    user = { "chatid" : id, "links" : [], "delay" : 10, "isWorking" : False, "mode" : ""}
    json_in = json.load(open('requestsdata.json'))
    json_in.append(user)
    with open('requestsdata.json', 'w', encoding='utf-8') as fh:
            json.dump(json_in, fh, indent=4, ensure_ascii=False)    

def chatKey(id):
    key = 0
    json_out = json.load(open('requestsdata.json', encoding='utf-8'))
    for i in json_out:
        if i['chatid'] == id: 
            return key
        else: key += 1

def changeValue(id, name, value):
    key = chatKey(id)

    with open("requestsdata.json", "r", encoding='utf-8') as file:
        data = json.load(file)
    
    data[key][name] = value

    with open('requestsdata.json', 'w', encoding='utf-8') as file:
            json.dump(data, file, indent=4, ensure_ascii=False) 

def getValue(id, name):
    key = chatKey(id)

    with open("requestsdata.json", "r", encoding='utf-8') as file:
        data = json.load(file)
    
    return data[key][name]

def addLink(id, link):
    key = chatKey(id)

    with open("requestsdata.json", "r", encoding='utf-8') as file:
        data = json.load(file)
    
    arr = data[key]["links"]
    print(arr)
    arr.append(link)
    print(arr)
    changeValue(id, "links", arr)

def deleteLink(id, link):
    key = chatKey(id)

    with open("requestsdata.json", "r", encoding='utf-8') as file:
        data = json.load(file)
    
    data[key]["links"].remove(link)

    with open('requestsdata.json', 'w', encoding='utf-8') as file:
            json.dump(data, file, indent=4, ensure_ascii=False)

@bot.message_handler(content_types=['text'])
def actions(message):
    
    if message.text == "–ó–∞–ø—É—Å—Ç–∏—Ç—å ‚úÖ":
        mode = ""
        changeValue(message.chat.id, "mode", "")
        if getValue(message.chat.id, "isWorking") == True:
            bot.send_message(message.chat.id, text="‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            if getValue(message.chat.id, "links"):
                changeValue(message.chat.id, "isWorking", True)
                bot.send_message(message.chat.id, text="‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!", reply_markup=mainMenuMarkup(message.chat.id))
                t1 = threading.Thread(target = thread1, args = (message,)).start()
                print("%s %s (%s) –∑–∞–ø—É—Å—Ç–∏–ª(-–∞) –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" % (message.from_user.first_name, message.from_user.last_name, message.from_user.username))
            else:
                bot.send_message(message.chat.id, text="‚ö†Ô∏è –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –ø—É—Å—Ç!\n\nüîΩ –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.", reply_markup=mainMenuMarkup(message.chat.id))

    elif message.text == "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ‚ùå":
        changeValue(message.chat.id, "mode", "")
        if getValue(message.chat.id, "isWorking") == True:
            changeValue(message.chat.id, "isWorking", False)
            bot.send_message(message.chat.id, text="‚ùå –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", reply_markup=mainMenuMarkup(message.chat.id))
            print("%s %s (%s) –æ—Å—Ç–∞–Ω–æ–≤–∏–ª(-–∞) –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" % (message.from_user.first_name, message.from_user.last_name, message.from_user.username))
        else:
            bot.send_message(message.chat.id, text="‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω!")
        
    elif message.text == "–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚ûï":
        changeValue(message.chat.id, "mode", "adding")
        bot.send_message(message.chat.id, text="üëÅÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞. \n\n"
                        +"‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –º–æ–∂–µ—Ç –∫–∞–∫ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://, —Ç–∞–∫ –∏ –Ω–µ—Ç. –ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫: \n‚ñ´Ô∏è https://example.com\n‚ñ´Ô∏è example.com", reply_markup=returnMarkup())

    elif message.text == "–£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚ûñ":
        changeValue(message.chat.id, "mode", "deleting")
        bot.send_message(message.chat.id, text="‚õî –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.", reply_markup=returnMarkup())

    elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ üïñ":
        changeValue(message.chat.id, "mode", "timechanging")
        bot.send_message(message.chat.id, text="üïß –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ —Å–µ–∫—É–Ω–¥, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü.\n\n‚ö†Ô∏è –í—Ä–µ–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 5 —Å–µ–∫—É–Ω–¥!", reply_markup=returnMarkup())

    elif message.text == "‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç":
        changeValue(message.chat.id, "mode", "")
        start(message)

    elif message.text == "–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü üëÅÔ∏è":
        changeValue(message.chat.id, "mode", "")
        
        websites = getValue(message.chat.id, "links")
        stroke = "üëÅÔ∏è –í–∞—à —Å–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä—è—â–∏—Ö—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü: \n\n"
        for i in websites:
            stroke = stroke + "‚ñ´Ô∏è " + i + "\n"
        stroke += "\nüîΩ –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—é."
        bot.send_message(message.chat.id, text=stroke, reply_markup=mainMenuMarkup(message.chat.id))

    else:
        if getValue(message.chat.id, "mode") == "adding":
            try: 
                msg = message.text
                msg = msg if msg.startswith('https') else ('https://' + msg)
                r = requests.get(msg)
                if msg in getValue(message.chat.id, "links"):
                    bot.send_message(message.chat.id, text="‚ö†Ô∏è –¢–∞–∫–∞—è —Å—Å—ã–ª–∫–∞ —É–∂–µ –∏–º–µ–µ—Ç—Å—è!", reply_markup=returnMarkup())
                else:
                    addLink(message.chat.id, msg)
                    bot.send_message(message.chat.id, text="‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞!\n\nüîΩ –ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.", reply_markup=returnMarkup())

            except requests.ConnectionError:
                bot.send_message(message.chat.id, text="‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–æ –º—ã –¥–æ–±–∞–≤–∏–ª–∏ –µ–µ –≤ —Å–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.\n\nüîΩ –ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.", reply_markup=returnMarkup())
                addLink(message.chat.id, msg)

            except requests.RequestException:
                bot.send_message(message.chat.id, text="‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É, –∞ –Ω–µ —Ç–µ–∫—Å—Ç!", reply_markup=returnMarkup())

        elif getValue(message.chat.id, "mode") == "deleting":
            msg = message.text
            msg = msg if msg.startswith('https') else ('https://' + msg)
            if msg in getValue(message.chat.id, "links"):
                deleteLink(message.chat.id, msg)
                bot.send_message(message.chat.id, text="‚úÖ –°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!\n\nüîΩ –ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.", reply_markup=returnMarkup())
            else:
                bot.send_message(message.chat.id, text="‚ö†Ô∏è –¢–∞–∫–æ–π —Å—Å—ã–ª–∫–∏ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Ç!", reply_markup=returnMarkup())

        elif getValue(message.chat.id, "mode") == "timechanging":
            if message.text.isnumeric():
                if int(message.text) >= 5:
                    changeValue(message.chat.id, "delay", int(message.text))
                    bot.send_message(message.chat.id, text="‚úÖ –í—Ä–µ–º—è —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–∞–Ω–æ!")
                    start(message)
                else: 
                    bot.send_message(message.chat.id, text="‚ö†Ô∏è –í—Ä–µ–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 5 —Å–µ–∫—É–Ω–¥!")
            else:
                bot.send_message(message.chat.id, text="‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Å–µ–∫—É–Ω–¥, –∞ –Ω–µ —Ç–µ–∫—Å—Ç!", reply_markup=returnMarkup())
        
def mainMenuMarkup(id):
    mainMenu = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if getValue(id, "isWorking") == False:
        btn1 = types.KeyboardButton("–ó–∞–ø—É—Å—Ç–∏—Ç—å ‚úÖ")
    else:
        btn1 = types.KeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ‚ùå")
    btn2 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚ûï")
    btn3 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚ûñ")
    btn4 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ üïñ")
    btn5 = types.KeyboardButton("–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü üëÅÔ∏è")
    mainMenu.row(btn1)
    mainMenu.row(btn2, btn3)
    mainMenu.row(btn4, btn5)
    return mainMenu

def returnMarkup():
    returnMenu = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç")
    returnMenu.row(btn1)
    return returnMenu

def thread1(message):
    websites = getValue(message.chat.id, "links")
    while True:
        if getValue(message.chat.id, "isWorking") == False: return
        pinging(message)
        time.sleep(getValue(message.chat.id, "delay"))

def pinging(message):

    websites = getValue(message.chat.id, "links")
    delay = getValue(message.chat.id, "delay")

    web_ping = "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (%s —Å–µ–∫—É–Ω–¥): \n" % (delay)
    for w in websites:
        status = ""
        code = ""
        try:
            r = requests.get(w) 

            if r.status_code >= 300 and r.status_code < 400:
                code = r.status_code
                status = "üü° –ü—Ä–æ–∏–∑–æ—à–ª–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"

            elif r.status_code >= 400 and r.status_code < 500:
                code = r.status_code
                status = "üü° –û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞"

            elif r.status_code >= 500:
                code = r.status_code
                status = "üü° –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"

            elif r.status_code == 200:
                code = r.status_code
                status = "üü¢ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞"
            
        except requests.ConnectionError:
            code = "-"
            status = "üî¥ –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è!"

        except requests.RequestException:
            code = "-"
            status = "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥"
    
        web_ping = "%s\n–ê–¥—Ä–µ—Å: %s \n–ö–æ–¥: %s \n–°—Ç–∞—Ç—É—Å: %s\n" % (web_ping, w, code, status)

    if getValue(message.chat.id, "isWorking"):
        bot.send_message(message.chat.id, text=web_ping)

@bot.message_handler(content_types=['sticker'])
def turnOff(message):
    if message.chat.id != 432061959: return
    
    with open("requestsdata.json", "r", encoding='utf-8') as file:
        data = json.load(file)
    
    for i in data:
        i["isWorking"] = False

    with open('requestsdata.json', 'w', encoding='utf-8') as file:
            json.dump(data, file, indent=4, ensure_ascii=False)

bot.polling(none_stop=True, interval=0)

